//Google Script

// Modified GET request example to fetch specific data based on channelId
function doGet(e) {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sheet = ss.getSheetByName('Sheet1'); // Change 'Sheet1' to your sheet's name

  // Check if the path is to get all channels
  if (e.parameter.path === '/get_channels') {
    const data = sheet.getDataRange().getValues(); // Fetch all the data in the sheet
    let channelIds = [];
    
    // Loop through the data to collect all channelIds
    for (let i = 0; i < data.length; i++) {
      channelIds.push(data[i][0]); // Assuming channel IDs are stored in the first column
    }
    
    const json = JSON.stringify(channelIds);
    return ContentService.createTextOutput(json).setMimeType(ContentService.MimeType.JSON);
  }

  const channelId = e.parameter.channelId;
  const data = sheet.getDataRange().getValues(); // Fetch all the data in the sheet
  let found = false;
  let requiredData = [];

  // Loop through the data to find the row with the specified channelId
  for (let i = 0; i < data.length; i++) {
    if (data[i][0] === channelId) {
      requiredData = [data[i][1]]; // Get the second column's value of the matched row
      found = true;
      break;
    }
  }

  const json = JSON.stringify(found ? requiredData : 'Channel not found');
  return ContentService.createTextOutput(json).setMimeType(ContentService.MimeType.JSON);
}

// Modified POST request to update or append data based on channelId
function doPost(e) {
  var result;

  try {
    var sheetName = 'Sheet1';
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var sheet = ss.getSheetByName(sheetName);
    var channelId = e.parameter.channelId;
    var jsonData = e.parameter.jsonData;
    var data = sheet.getDataRange().getValues();
    var found = false;

    // Loop through the sheet to find if the channelId exists
    for (let i = 0; i < data.length; i++) {
      if (data[i][0] === channelId) {
        // ChannelId found, update the corresponding second column
        sheet.getRange(i + 1, 2).setValue(jsonData);
        found = true;
        break;
      }
    }

    // If the channelId is not found, append a new row
    if (!found) {
      sheet.appendRow([channelId, jsonData]);
    }

    result = { 'status': 'success', 'row': sheet.getLastRow() };
  } catch (err) {
    result = { 'status': 'error', 'message': err.toString() };
  }

  return ContentService.createTextOutput(JSON.stringify(result))
      .setMimeType(ContentService.MimeType.JSON);
}


/////// SETUP ///////

Create a Google Apps Script:

Go to Extensions > Apps Script from within your Google Sheets.

Replace the content of the script editor with a script that processes GET and POST requests (above).

Save and name your project.

Publish the script as a web app (New Deployment > Select type 'Web app' > Deploy). Set access to "Anyone, even anonymous" for testing purposes. Note the provided URL, which you will use in your Unity script.